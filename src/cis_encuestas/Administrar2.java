/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cis_encuestas;

import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jose Luis
 */
public class Administrar2 extends javax.swing.JFrame {
    Exportar obj;
    DefaultTableModel model = new DefaultTableModel();
    /**
     * Creates new form Administrar2
     */
    public Administrar2() {
        initComponents();
        this.setLocationRelativeTo(null);
//this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GrupoTablas = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        rdbCISConocidos = new javax.swing.JRadioButton();
        rdbMedio = new javax.swing.JRadioButton();
        rdbActividades = new javax.swing.JRadioButton();
        rdbMejores = new javax.swing.JRadioButton();
        rdbCuotas = new javax.swing.JRadioButton();
        rdbDias = new javax.swing.JRadioButton();
        rdbRecomendacion = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableMostrar2 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 255, 255)));

        rdbCISConocidos.setBackground(new java.awt.Color(0, 0, 102));
        GrupoTablas.add(rdbCISConocidos);
        rdbCISConocidos.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        rdbCISConocidos.setForeground(new java.awt.Color(255, 255, 255));
        rdbCISConocidos.setText("CIS Conocidos");
        rdbCISConocidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbCISConocidosActionPerformed(evt);
            }
        });

        rdbMedio.setBackground(new java.awt.Color(0, 0, 102));
        GrupoTablas.add(rdbMedio);
        rdbMedio.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        rdbMedio.setForeground(new java.awt.Color(255, 255, 255));
        rdbMedio.setText("Medios por los que se conocio");
        rdbMedio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbMedioActionPerformed(evt);
            }
        });

        rdbActividades.setBackground(new java.awt.Color(0, 0, 102));
        GrupoTablas.add(rdbActividades);
        rdbActividades.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        rdbActividades.setForeground(new java.awt.Color(255, 255, 255));
        rdbActividades.setText("Actividades solicitadas");
        rdbActividades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbActividadesActionPerformed(evt);
            }
        });

        rdbMejores.setBackground(new java.awt.Color(0, 0, 102));
        GrupoTablas.add(rdbMejores);
        rdbMejores.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        rdbMejores.setForeground(new java.awt.Color(255, 255, 255));
        rdbMejores.setText("Mejores actividades");
        rdbMejores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbMejoresActionPerformed(evt);
            }
        });

        rdbCuotas.setBackground(new java.awt.Color(0, 0, 102));
        GrupoTablas.add(rdbCuotas);
        rdbCuotas.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        rdbCuotas.setForeground(new java.awt.Color(255, 255, 255));
        rdbCuotas.setText("Cuotas");
        rdbCuotas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbCuotasActionPerformed(evt);
            }
        });

        rdbDias.setBackground(new java.awt.Color(0, 0, 102));
        GrupoTablas.add(rdbDias);
        rdbDias.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        rdbDias.setForeground(new java.awt.Color(255, 255, 255));
        rdbDias.setText("Mostrar dias");
        rdbDias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbDiasActionPerformed(evt);
            }
        });

        rdbRecomendacion.setBackground(new java.awt.Color(0, 0, 102));
        GrupoTablas.add(rdbRecomendacion);
        rdbRecomendacion.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        rdbRecomendacion.setForeground(new java.awt.Color(255, 255, 255));
        rdbRecomendacion.setText("Recomendacion");
        rdbRecomendacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbRecomendacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdbCISConocidos)
                    .addComponent(rdbCuotas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdbMedio)
                    .addComponent(rdbDias))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rdbActividades)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdbMejores, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(rdbRecomendacion))
                .addContainerGap(94, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbCISConocidos)
                    .addComponent(rdbMedio)
                    .addComponent(rdbActividades)
                    .addComponent(rdbMejores))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbCuotas)
                    .addComponent(rdbDias)
                    .addComponent(rdbRecomendacion))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 720, -1));

        jPanel2.setBackground(new java.awt.Color(0, 0, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 255, 255)));

        tableMostrar2.setBackground(new java.awt.Color(0, 0, 153));
        tableMostrar2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 255, 255)));
        tableMostrar2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        tableMostrar2.setForeground(new java.awt.Color(255, 255, 255));
        tableMostrar2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8"
            }
        ));
        jScrollPane1.setViewportView(tableMostrar2);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 83, 721, -1));

        jPanel4.setBackground(new java.awt.Color(0, 0, 102));
        jPanel4.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 255, 255)));

        jButton4.setBackground(new java.awt.Color(0, 0, 153));
        jButton4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("REGRESAR");
        jButton4.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 255, 255)));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(0, 0, 153));
        jButton5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("EXPORTAR");
        jButton5.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 255, 255)));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(0, 0, 153));
        jButton6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("MOSTRAR GRAFICAS");
        jButton6.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 255, 255)));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 463, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FondosEiconos/fondo2.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 610));

        jMenuBar1.setBackground(new java.awt.Color(0, 0, 153));
        jMenuBar1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 255, 255)));
        jMenuBar1.setForeground(new java.awt.Color(255, 255, 255));

        jMenu1.setForeground(new java.awt.Color(255, 255, 255));
        jMenu1.setText("Encuestas CIS");

        jMenuItem2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jMenuItem2.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItem2.setText("Encuesta Satisfaccion");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rdbCISConocidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbCISConocidosActionPerformed
       MostrarCISConocidos();
    }//GEN-LAST:event_rdbCISConocidosActionPerformed

    private void rdbMedioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbMedioActionPerformed
       MostrarMedios();
    }//GEN-LAST:event_rdbMedioActionPerformed

    private void rdbActividadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbActividadesActionPerformed
       MostrarActividadessolicitadas();  
    }//GEN-LAST:event_rdbActividadesActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        INICIO i = new INICIO();
        i.show();
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
       Administrar a = new Administrar();
       a.show();
       dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void rdbMejoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbMejoresActionPerformed
        MostrarActividadesPopulares();
    }//GEN-LAST:event_rdbMejoresActionPerformed

    private void rdbCuotasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbCuotasActionPerformed
       MostrarCuotas();
    }//GEN-LAST:event_rdbCuotasActionPerformed

    private void rdbDiasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbDiasActionPerformed
        MostrarHorariodias();
    }//GEN-LAST:event_rdbDiasActionPerformed

    private void rdbRecomendacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbRecomendacionActionPerformed
        MostrarRecomendaciones();
    }//GEN-LAST:event_rdbRecomendacionActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            obj = new Exportar();
            obj.exportarExcel(tableMostrar2);
        } catch (IOException ex) {
            Logger.getLogger(Administrar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Administrar2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Administrar2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Administrar2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Administrar2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Administrar2().setVisible(true);
            }
        });
    }

    public void MostrarCISConocidos(){
    
           DefaultTableModel model = new DefaultTableModel();
            model.addColumn("id_centros");
            model.addColumn("centro");
            model.addColumn("veces_conocido");
            
            tableMostrar2.setModel(model);
            String[] datos = new String[3];
            
           String sql = "Select * From pregunta2_percepcion";
        try{
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/bdcis2", "root", "");
            PreparedStatement pst = cn.prepareStatement(sql);
            ResultSet resul = pst.executeQuery(sql);
            
            while(resul.next()){
                datos[0]=resul.getString(1);
                datos[1]=resul.getString(2);
                datos[2]=resul.getString(3);
                model.addRow(datos);}
               
        }catch(Exception e){
            System.out.println(e);
        }
        
        
}
   public void MostrarMedios(){
    
           DefaultTableModel model = new DefaultTableModel();
            model.addColumn("id_medio");
            model.addColumn("Medio");
            model.addColumn("Cantidad");
            
            tableMostrar2.setModel(model);
            String[] datos = new String[3];
            
           String sql = "Select * From pregunta3_percepcion";
        try{
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/bdcis2", "root", "");
            PreparedStatement pst = cn.prepareStatement(sql);
            ResultSet resul = pst.executeQuery(sql);
            
            while(resul.next()){
                datos[0]=resul.getString(1);
                datos[1]=resul.getString(2);
                datos[2]=resul.getString(3);
                model.addRow(datos);}
               
        }catch(Exception e){
            System.out.println(e);
        }
        
        
}
   public void MostrarActividadessolicitadas(){
    
           DefaultTableModel model = new DefaultTableModel();
            model.addColumn("id");
            model.addColumn("Actividad");
            model.addColumn("Cantidad");
            
            tableMostrar2.setModel(model);
            String[] datos = new String[3];
            
           String sql = "Select * From pregunta5_percepcion";
        try{
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/bdcis2", "root", "");
            PreparedStatement pst = cn.prepareStatement(sql);
            ResultSet resul = pst.executeQuery(sql);
            
            while(resul.next()){
                datos[0]=resul.getString(1);
                datos[1]=resul.getString(2);
                datos[2]=resul.getString(3);
                model.addRow(datos);}
               
        }catch(Exception e){
            System.out.println(e);
        }
        
        
}
   public void MostrarActividadesPopulares(){
    
           DefaultTableModel model = new DefaultTableModel();
            model.addColumn("id_Actividad");
            model.addColumn("Actividad");
            model.addColumn("1ro");
            model.addColumn("2do");
            model.addColumn("3ro");
            model.addColumn("4to");
            model.addColumn("5to");
            model.addColumn("6to");
            model.addColumn("7mo");
            model.addColumn("NA");
            
            tableMostrar2.setModel(model);
            String[] datos = new String[10];
            
           String sql = "Select * From pregunta6_percepcion";
        try{
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/bdcis2", "root", "");
            PreparedStatement pst = cn.prepareStatement(sql);
            ResultSet resul = pst.executeQuery(sql);
            
            while(resul.next()){
                datos[0]=resul.getString(1);
                datos[1]=resul.getString(2);
                datos[2]=resul.getString(3);
                datos[3]=resul.getString(4);
                datos[4]=resul.getString(5);
                datos[5]=resul.getString(6);
                datos[6]=resul.getString(7);
                datos[7]=resul.getString(8);
                datos[8]=resul.getString(9);
                datos[9]=resul.getString(10);
                model.addRow(datos);}
               
        }catch(Exception e){
            System.out.println(e);
        }
        
        
}
   public void MostrarCuotas(){
    
           DefaultTableModel model = new DefaultTableModel();
            model.addColumn("id_cuota");
            model.addColumn("Pregunta");
            model.addColumn("Menos de $30.00");
            model.addColumn("Entre $30.00 y $50.00");
            model.addColumn("Entre $50.00 y $90.00");
            model.addColumn("Mayor a $90.00");
            
            tableMostrar2.setModel(model);
            String[] datos = new String[6];
            
           String sql = "Select * From cuota_recuperacion";
        try{
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/bdcis2", "root", "");
            PreparedStatement pst = cn.prepareStatement(sql);
            ResultSet resul = pst.executeQuery(sql);
            
            while(resul.next()){
                datos[0]=resul.getString(1);
                datos[1]=resul.getString(2);
                datos[2]=resul.getString(3);
                datos[3]=resul.getString(4);
                datos[4]=resul.getString(5);
                datos[5]=resul.getString(6);
                model.addRow(datos);}
               
        }catch(Exception e){
            System.out.println(e);
        }
        
        
}
public void MostrarHorariodias(){
    
           DefaultTableModel model = new DefaultTableModel();
            model.addColumn("id");
            model.addColumn("Dia");
            model.addColumn("Cantidad");
            
            
            tableMostrar2.setModel(model);
            String[] datos = new String[3];
            
           String sql = "Select * From horariodias";
        try{
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/bdcis2", "root", "");
            PreparedStatement pst = cn.prepareStatement(sql);
            ResultSet resul = pst.executeQuery(sql);
            
            while(resul.next()){
                datos[0]=resul.getString(1);
                datos[1]=resul.getString(2);
                datos[2]=resul.getString(3);
                model.addRow(datos);}
               
        }catch(Exception e){
            System.out.println(e);
        }
        
        
}
public void MostrarRecomendaciones(){
    
           DefaultTableModel model = new DefaultTableModel();
            model.addColumn("id");
            model.addColumn("Recomendacion");
            
            
            
            tableMostrar2.setModel(model);
            String[] datos = new String[2];
            
           String sql = "Select * From recomendaciones";
        try{
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/bdcis2", "root", "");
            PreparedStatement pst = cn.prepareStatement(sql);
            ResultSet resul = pst.executeQuery(sql);
            
            while(resul.next()){
                datos[0]=resul.getString(1);
                datos[1]=resul.getString(2);
                
                model.addRow(datos);}
               
        }catch(Exception e){
            System.out.println(e);
        }
        
        
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup GrupoTablas;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rdbActividades;
    private javax.swing.JRadioButton rdbCISConocidos;
    private javax.swing.JRadioButton rdbCuotas;
    private javax.swing.JRadioButton rdbDias;
    private javax.swing.JRadioButton rdbMedio;
    private javax.swing.JRadioButton rdbMejores;
    private javax.swing.JRadioButton rdbRecomendacion;
    private javax.swing.JTable tableMostrar2;
    // End of variables declaration//GEN-END:variables
}
